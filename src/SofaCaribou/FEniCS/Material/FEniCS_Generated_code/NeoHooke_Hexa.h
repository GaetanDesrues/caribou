// This code conforms with the UFC specification version 2018.2.0.dev0
// and was automatically generated by FFCx version 0.3.1.dev0.
//
// This code was generated with the following parameters:
//
//  {'assume_aligned': -1,
//   'epsilon': 1e-14,
//   'output_directory': '../../FEniCS_Generated_code/',
//   'padlen': 1,
//   'profile': False,
//   'scalar_type': 'double',
//   'table_atol': 1e-09,
//   'table_rtol': 1e-06,
//   'tabulate_tensor_void': False,
//   'ufl_file': ['NeoHooke_Hexa.py'],
//   'verbosity': 30,
//   'visualise': False}


#pragma once

#include <ufcx.h>

#ifdef __cplusplus
extern "C" {
#endif

extern ufcx_finite_element element_41ef4b248fae7a876d8b10a862f220d1e7e12bc7;

extern ufcx_finite_element element_36a6e75bd43876b54b708372cec0c664cc09cec0;

extern ufcx_finite_element element_51053d16e9fef09070576a56209b34330c3e2930;

extern ufcx_finite_element element_ef1a1915f47c055271e11d5e56ee2bc57ebf935e;

extern ufcx_dofmap dofmap_41ef4b248fae7a876d8b10a862f220d1e7e12bc7;

extern ufcx_dofmap dofmap_36a6e75bd43876b54b708372cec0c664cc09cec0;

extern ufcx_dofmap dofmap_51053d16e9fef09070576a56209b34330c3e2930;

extern ufcx_dofmap dofmap_ef1a1915f47c055271e11d5e56ee2bc57ebf935e;

extern ufcx_integral integral_9bad79ce90309b5cdca8025f3ed22f97dfcc5312;

extern ufcx_integral integral_5bc092b879fce758b76c8604f9c203a50aff320a;

extern ufcx_form form_63479bc67642e58e5e3ad1615f3b34a8009cb517;

// Helper used to create form using name which was given to the
// form in the UFL file.
// This helper is called in user c++ code.
//
extern ufcx_form* form_NeoHooke_Hexa_F;

// Helper used to create function space using function name
// i.e. name of the Python variable.
//
ufcx_function_space* functionspace_form_NeoHooke_Hexa_F(const char* function_name);

extern ufcx_form form_c3fecc036db1c2264f63bdbf331f7d059e22e2bd;

// Helper used to create form using name which was given to the
// form in the UFL file.
// This helper is called in user c++ code.
//
extern ufcx_form* form_NeoHooke_Hexa_J;

// Helper used to create function space using function name
// i.e. name of the Python variable.
//
ufcx_function_space* functionspace_form_NeoHooke_Hexa_J(const char* function_name);

#ifdef __cplusplus
}
#endif
