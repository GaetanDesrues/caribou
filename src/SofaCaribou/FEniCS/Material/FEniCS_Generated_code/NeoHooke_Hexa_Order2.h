// This code conforms with the UFC specification version 2018.2.0.dev0
// and was automatically generated by FFCx version 0.3.1.dev0.
//
// This code was generated with the following parameters:
//
//  {'assume_aligned': -1,
//   'epsilon': 1e-14,
//   'output_directory': '.',
//   'padlen': 1,
//   'profile': False,
//   'scalar_type': 'double',
//   'table_atol': 1e-09,
//   'table_rtol': 1e-06,
//   'tabulate_tensor_void': False,
//   'ufl_file': ['NeoHooke_Hexa_Order2.ufl'],
//   'verbosity': 30,
//   'visualise': False}


#pragma once

#include <ufcx.h>

#ifdef __cplusplus
extern "C" {
#endif

extern ufcx_finite_element element_3723b283448d63aba03f815f7a8076ab80485e93;

extern ufcx_finite_element element_88e2d122f1b8bf5ecfd5b92f487efd667590f2d7;

extern ufcx_finite_element element_fd38860d30d416d3b3b28cb91a3b17c157f2e792;

extern ufcx_finite_element element_08833ce5f95fadeb7873dd470510a7e25e9d61d0;

extern ufcx_dofmap dofmap_3723b283448d63aba03f815f7a8076ab80485e93;

extern ufcx_dofmap dofmap_88e2d122f1b8bf5ecfd5b92f487efd667590f2d7;

extern ufcx_dofmap dofmap_fd38860d30d416d3b3b28cb91a3b17c157f2e792;

extern ufcx_dofmap dofmap_08833ce5f95fadeb7873dd470510a7e25e9d61d0;

extern ufcx_integral integral_a5bc122696b97b97665ad6d5b45e3b7507a93841;

extern ufcx_integral integral_1aa13fd8c4e4a35d532ffe079b4f5ed5ba3669ef;

extern ufcx_form form_f09d55c7a49a65f0ec54f5696b1460e046a20d57;

// Helper used to create form using name which was given to the
// form in the UFL file.
// This helper is called in user c++ code.
//
extern ufcx_form* form_NeoHooke_Hexa_Order2_F;

// Helper used to create function space using function name
// i.e. name of the Python variable.
//
ufcx_function_space* functionspace_form_NeoHooke_Hexa_Order2_F(const char* function_name);

extern ufcx_form form_111e9a25336e16271aeab066e4ff25c337c62638;

// Helper used to create form using name which was given to the
// form in the UFL file.
// This helper is called in user c++ code.
//
extern ufcx_form* form_NeoHooke_Hexa_Order2_J;

// Helper used to create function space using function name
// i.e. name of the Python variable.
//
ufcx_function_space* functionspace_form_NeoHooke_Hexa_Order2_J(const char* function_name);

#ifdef __cplusplus
}
#endif
