// This code conforms with the UFC specification version 2018.2.0.dev0
// and was automatically generated by FFCx version 0.3.1.dev0.
//
// This code was generated with the following parameters:
//
//  {'assume_aligned': -1,
//   'epsilon': 1e-14,
//   'output_directory': '.',
//   'padlen': 1,
//   'profile': False,
//   'scalar_type': 'double',
//   'table_atol': 1e-09,
//   'table_rtol': 1e-06,
//   'tabulate_tensor_void': False,
//   'ufl_file': ['NeoHooke_Tetra_Order2.ufl'],
//   'verbosity': 30,
//   'visualise': False}


#pragma once

#include <ufcx.h>

#ifdef __cplusplus
extern "C" {
#endif

extern ufcx_finite_element element_f1020df3efaf18f924782ed459259887ae761642;

extern ufcx_finite_element element_ac3f23cb7f958efb5938bb1cc2674f295271230a;

extern ufcx_finite_element element_3144b46cef0719975df83b9f9a74206cdd4d2b25;

extern ufcx_finite_element element_77557086c0eb9852e4860a79a1abb021078995ee;

extern ufcx_dofmap dofmap_f1020df3efaf18f924782ed459259887ae761642;

extern ufcx_dofmap dofmap_ac3f23cb7f958efb5938bb1cc2674f295271230a;

extern ufcx_dofmap dofmap_3144b46cef0719975df83b9f9a74206cdd4d2b25;

extern ufcx_dofmap dofmap_77557086c0eb9852e4860a79a1abb021078995ee;

extern ufcx_integral integral_8658202bf66665c13e78af3661482716f5d6773f;

extern ufcx_integral integral_fd2ae437f7b47153f8735d0427784dc6e15bcdae;

extern ufcx_form form_b673e5eca3116de223118b7992e1de4e19ca4108;

// Helper used to create form using name which was given to the
// form in the UFL file.
// This helper is called in user c++ code.
//
extern ufcx_form* form_NeoHooke_Tetra_Order2_F;

// Helper used to create function space using function name
// i.e. name of the Python variable.
//
ufcx_function_space* functionspace_form_NeoHooke_Tetra_Order2_F(const char* function_name);

extern ufcx_form form_d87b12c80b1348390df829d5d48dd931e0bfcec8;

// Helper used to create form using name which was given to the
// form in the UFL file.
// This helper is called in user c++ code.
//
extern ufcx_form* form_NeoHooke_Tetra_Order2_J;

// Helper used to create function space using function name
// i.e. name of the Python variable.
//
ufcx_function_space* functionspace_form_NeoHooke_Tetra_Order2_J(const char* function_name);

#ifdef __cplusplus
}
#endif
